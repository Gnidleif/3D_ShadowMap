//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    float4x4 gView;                     // Offset:    0, size:   64
    float4x4 gProj;                     // Offset:   64, size:   64
}

cbuffer cbPerObject
{
    Material gMaterial;                 // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  128, size:   64
}

cbuffer cbFixed
{
    float   texScale = 15;              // Offset:    0, size:    4
}

//
// 10 local object(s)
//
Texture2D gBlendMap;
Texture2D gTex0;
Texture2D gTex1;
Texture2D gTex2;
Texture2D gTex3;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
RasterizerState Wireframe
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
    FrontCounterClockwise = bool(FALSE /* false */);
};
RasterizerState Solidframe
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(NONE /* 1 */);
    FrontCounterClockwise = bool(FALSE /* false */);
};
DepthStencilState NoDepthWrites
{
    DepthEnable = bool(TRUE /* 1 */);
    DepthWriteMask = uint(ALL /* 1 */);
    DepthFunc = uint(LESS_EQUAL /* 4 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 TerrainSolidTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64
                //   float4x4 gProj;                    // Offset:   64 Size:    64
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4
                //      = 0x41700000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_constantbuffer cb1[11], immediateIndexed
                dcl_constantbuffer cb2[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 6
                
                #line 64 "C:\Users\Gnidleif\Documents\Visual Studio 2010\Projects\TreDe v2\TreDe\Data\FX\Terrain\Terrain.fx"
                mul r0.xyzw, cb0[0].xyzw, cb0[4].xxxx
                mul r1.xyzw, cb0[1].xyzw, cb0[4].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[2].xyzw, cb0[4].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[3].xyzw, cb0[4].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[0].xyzw, cb0[5].xxxx
                mul r2.xyzw, cb0[1].xyzw, cb0[5].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[2].xyzw, cb0[5].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[3].xyzw, cb0[5].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[0].xyzw, cb0[6].xxxx
                mul r3.xyzw, cb0[1].xyzw, cb0[6].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[2].xyzw, cb0[6].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[3].xyzw, cb0[6].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[0].xyzw, cb0[7].xxxx
                mul r4.xyzw, cb0[1].xyzw, cb0[7].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[2].xyzw, cb0[7].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[3].xyzw, cb0[7].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb1[4].xyzw
                mul r5.xyzw, r0.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb1[7].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb1[4].xyzw
                mul r5.xyzw, r1.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb1[7].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb1[4].xyzw
                mul r5.xyzw, r2.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb1[7].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb1[4].xyzw
                mul r5.xyzw, r3.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb1[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                
                #line 70
                dp4 r1.x, r4.xyzw, cb1[4].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb1[5].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb1[6].xyzw  // output<6:NaN:Inf>
                
                #line 73
                dp3 r2.x, v1.xyzx, cb1[8].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb1[9].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb1[10].xyzx  // output<9:NaN:Inf>
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // output<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mul r3.xy, v2.xyxx, cb2[0].xxxx  // output<10:Inf,11:Inf>
                mov r3.zw, v2.xxxy  // output<12,13>
                mov o0.xyzw, r0.xyzw  // VSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r3.xyxx  // VSScene<10:Inf,11:Inf>
                mov o3.zw, r3.zzzw  // VSScene<12,13>
                mov o1.xyz, r1.xyzx  // VSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 79 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gBlendMap                         texture  float4          2d    0        1
                // gTex0                             texture  float4          2d    1        1
                // gTex1                             texture  float4          2d    2        1
                // gTex2                             texture  float4          2d    3        1
                // gTex3                             texture  float4          2d    4        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 85 "C:\Users\Gnidleif\Documents\Visual Studio 2010\Projects\TreDe v2\TreDe\Data\FX\Terrain\Terrain.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t1.xyzw, s0  // c0<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t2.xyzw, s0  // c1<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t3.xyzw, s0  // c2<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t4.xyzw, s0  // c3<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.zwzz, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // blend<0:Inf,1:Inf,2:Inf>
                mov r0.xyzw, r0.xyzw  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r5.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r5.xyzw
                mul r1.xyzw, r1.xyzw, r4.xxxx
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, r4.yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r4.zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 98
                mov o0.xyzw, r0.xyzw  // PSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            RasterizerState = Solidframe;
        }

    }

    technique11 TerrainWireTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float4x4 gView;                    // Offset:    0 Size:    64
                //   float4x4 gProj;                    // Offset:   64 Size:    64
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float4 Reflect;                // Offset:   48
                //
                //   } gMaterial;                       // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float texScale;                    // Offset:    0 Size:     4
                //      = 0x41700000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                // cbFixed                           cbuffer      NA          NA    2        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_constantbuffer cb1[11], immediateIndexed
                dcl_constantbuffer cb2[1], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 6
                
                #line 64 "C:\Users\Gnidleif\Documents\Visual Studio 2010\Projects\TreDe v2\TreDe\Data\FX\Terrain\Terrain.fx"
                mul r0.xyzw, cb0[0].xyzw, cb0[4].xxxx
                mul r1.xyzw, cb0[1].xyzw, cb0[4].yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[2].xyzw, cb0[4].zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[3].xyzw, cb0[4].wwww
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r1.xyzw, cb0[0].xyzw, cb0[5].xxxx
                mul r2.xyzw, cb0[1].xyzw, cb0[5].yyyy
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[2].xyzw, cb0[5].zzzz
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[3].xyzw, cb0[5].wwww
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r2.xyzw, cb0[0].xyzw, cb0[6].xxxx
                mul r3.xyzw, cb0[1].xyzw, cb0[6].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[2].xyzw, cb0[6].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[3].xyzw, cb0[6].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[0].xyzw, cb0[7].xxxx
                mul r4.xyzw, cb0[1].xyzw, cb0[7].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[2].xyzw, cb0[7].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[3].xyzw, cb0[7].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, r0.xxxx, cb1[4].xyzw
                mul r5.xyzw, r0.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r0.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r0.xyzw, r0.wwww, cb1[7].xyzw
                add r0.xyzw, r0.xyzw, r4.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r4.xyzw, r1.xxxx, cb1[4].xyzw
                mul r5.xyzw, r1.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r1.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r1.xyzw, r1.wwww, cb1[7].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r4.xyzw, r2.xxxx, cb1[4].xyzw
                mul r5.xyzw, r2.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r2.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r2.xyzw, r2.wwww, cb1[7].xyzw
                add r2.xyzw, r2.xyzw, r4.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r4.xyzw, r3.xxxx, cb1[4].xyzw
                mul r5.xyzw, r3.yyyy, cb1[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, r3.zzzz, cb1[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r3.xyzw, r3.wwww, cb1[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                mov r4.xyz, v0.xyzx
                mov r4.w, l(1.000000)
                dp4 r0.x, r4.xyzw, r0.xyzw  // output<0:NaN:Inf>
                dp4 r0.y, r4.xyzw, r1.xyzw  // output<1:NaN:Inf>
                dp4 r0.z, r4.xyzw, r2.xyzw  // output<2:NaN:Inf>
                dp4 r0.w, r4.xyzw, r3.xyzw  // output<3:NaN:Inf>
                
                #line 70
                dp4 r1.x, r4.xyzw, cb1[4].xyzw  // output<4:NaN:Inf>
                dp4 r1.y, r4.xyzw, cb1[5].xyzw  // output<5:NaN:Inf>
                dp4 r1.z, r4.xyzw, cb1[6].xyzw  // output<6:NaN:Inf>
                
                #line 73
                dp3 r2.x, v1.xyzx, cb1[8].xyzx  // output<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb1[9].xyzx  // output<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb1[10].xyzx  // output<9:NaN:Inf>
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // output<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mul r3.xy, v2.xyxx, cb2[0].xxxx  // output<10:Inf,11:Inf>
                mov r3.zw, v2.xxxy  // output<12,13>
                mov o0.xyzw, r0.xyzw  // VSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xy, r3.xyxx  // VSScene<10:Inf,11:Inf>
                mov o3.zw, r3.zzzw  // VSScene<12,13>
                mov o1.xyz, r1.xyzx  // VSScene<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VSScene<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 79 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gBlendMap                         texture  float4          2d    0        1
                // gTex0                             texture  float4          2d    1        1
                // gTex1                             texture  float4          2d    2        1
                // gTex2                             texture  float4          2d    3        1
                // gTex3                             texture  float4          2d    4        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_resource_texture2d (float,float,float,float) t2
                dcl_resource_texture2d (float,float,float,float) t3
                dcl_resource_texture2d (float,float,float,float) t4
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 85 "C:\Users\Gnidleif\Documents\Visual Studio 2010\Projects\TreDe v2\TreDe\Data\FX\Terrain\Terrain.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t1.xyzw, s0  // c0<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t2.xyzw, s0  // c1<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t3.xyzw, s0  // c2<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t4.xyzw, s0  // c3<0:Inf,1:Inf,2:Inf,3:Inf>
                sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.zwzz, t0.xyzw, s0
                mov r4.xyz, r4.xyzx  // blend<0:Inf,1:Inf,2:Inf>
                mov r0.xyzw, r0.xyzw  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r5.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r5.xyzw
                mul r1.xyzw, r1.xyzw, r4.xxxx
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, r4.yyyy
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r1.xyzw, -r0.xyzw
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r4.zzzz
                add r0.xyzw, r0.xyzw, r1.xyzw  // texColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 98
                mov o0.xyzw, r0.xyzw  // PSScene<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            RasterizerState = Wireframe;
            DS_StencilRef = uint(0);
            DepthStencilState = NoDepthWrites;
        }

    }

}

